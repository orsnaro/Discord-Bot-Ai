name: push-aws-bot-server

# Trigger deployment only on push to production-AWS branch
on:
  push:
    branches:
      - production-AWS

jobs:
  deploy:
    name: Deploy to EC2 on every production-AWS branch push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 3.11 # with a build matrix, you can specify a list of python versions to deploy with
    steps:
      - uses: actions/checkout@v3
      - name: DEBUG TESTING STEP show env vars
        env: 
          BARD_GMAILPASS: ${{ secrets.BARD_GMAILPASS }}
          BARD_GMAIL: ${{ secrets.BARD_GMAIL }}
          BARD_APIKEY: ${{ secrets.BARD_APIKEY }}
          DISCORDBOTTOKEN_GPTEOUS: ${{ secrets.DISCORDBOTTOKEN_GPTEOUS }}
          OPENAI_APIKEY: ${{ secrets.OPENAI_APIKEY }}
          TARGET: ${{ secrets.TARGET_DIR }}  
        run: |
           echo "dir: $TARGET \n BARD_APIKEY: $BARD_APIKEY"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install python project dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Deploy to AWS EC2 discord bot server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}
      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        env: 
          BARD_GMAILPASS: ${{ secrets.BARD_GMAILPASS }}
          BARD_GMAIL: ${{ secrets.BARD_GMAIL }}
          BARD_APIKEY: ${{ secrets.BARD_APIKEY }}
          DISCORDBOTTOKEN_GPTEOUS: ${{ secrets.DISCORDBOTTOKEN_GPTEOUS }}
          OPENAI_APIKEY: ${{ secrets.OPENAI_APIKEY }}
          DIR : ${{ secrets.TARGET_DIR }}   
          IS_PRODUCTION : '1'
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_SSH_PORT }}
          command_timeout: 3m
        # script_stop: true
          envs: IS_PRODUCTION , DIR , BARD_APIKEY , DISCORDBOTTOKEN_GPTEOUS , OPENAI_APIKEY , BARD_GMAIL , BARD_GMAILPASS #passes them to server put doesnt save them this which is good!
          script: | # chmod u+x bot_runner.sh : 'u' owner permission and 'x' is execute permission
            sudo apt-get -y update
            sudo apt-get -y install python3
            sudo apt-get -y install python3-pip
            export CURRENT_DATETIME=$(date +"%Y-%m-%d,%H:%M:%S")
            pkill python3
            cd $DIR
            echo -e "#################################### \n\n\n [STARTING NEW BOT SESSION] DATE: $CURRENT_DATETIME GMT \n\n\n#################################### \n" >> ./std_log.txt
            echo "python3 /home/ubuntu/src/main_wizard_bot.py" > ../bot_runner.sh
            chmod u+x ../bot_runner.sh
            tmux new -d -s bot_runner_tmux '../bot_runner.sh >> ../tmux_bot_log.txt'
            exit 0

            
